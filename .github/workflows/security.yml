name: Security & Dependencies

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
  
  govulncheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest
    - name: Run govulncheck
      run: govulncheck ./...
  
  npm-audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [frontend, extension]
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Run npm audit
      working-directory: ./${{ matrix.directory }}
      run: |
        if [ -f package-lock.json ]; then
          npm ci
          npm audit --audit-level=moderate
        else
          echo "No package-lock.json found, skipping audit"
        fi
  
  codeql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: ['go', 'javascript']
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"